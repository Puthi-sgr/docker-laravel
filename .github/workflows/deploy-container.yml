name: Deploy (Container - Prod)
on:
  workflow_run:
    workflows: ["Main (Container Build & Push)"]
    types: [completed]
    branches: ["main"]

jobs:
  prepare: #Prepare the short sha for the image reference cuz sha is long, sha image is short
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      short_sha: ${{ steps.get_sha.outputs.short_sha }}
    steps:
      - name: Get short SHA
        id: get_sha
        run: echo "short_sha=$(echo ${{ github.event.workflow_run.head_sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

  deploy:
    needs: [prepare]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    uses: Puthi-sgr/puthi-cicd-templates/.github/workflows/container-deploy.yml@v1.9
    with:
      working_dir: "/opt/docker-laravel"
      compose_file: "docker-compose.prod.yml"
      # Correctly reference the triggering workflow's commit SHA
      image_ref: "ghcr.io/puthi-sgr/docker-laravel:sha-${{ needs.prepare.outputs.short_sha }}"
      manage_env: true
      env_remote_path: "/opt/docker-laravel/runtime.prod.env"
      health_url: "https://puthidocker.eltheocapital.com/health"
      # Optional, only for Laravel:
      post_rollout_cmd: >
        docker compose -f docker-compose.prod.yml exec -T app bash -lc '
          set -Eeuo pipefail
          if [ -f /var/www/artisan ]; then
            ARTISAN=/var/www/artisan
          elif [ -f /var/www/html/artisan ]; then
            ARTISAN=/var/www/html/artisan
          else
            echo "artisan not found at /var/www or /var/www/html"; exit 1
          fi
          CACHE_DIR="$(dirname "$ARTISAN")/bootstrap/cache"
          rm -f "$CACHE_DIR"/*.php || true
          php "$ARTISAN" config:clear
          php "$ARTISAN" migrate --force
          php "$ARTISAN" config:cache
          php "$ARTISAN" storage:link || true
        '

    secrets:
      host: ${{ secrets.SSH_HOST }}
      ssh_user: ${{ secrets.SSH_USER }}
      ssh_key: ${{ secrets.SSH_KEY }}
      ghcr_pat: ${{ secrets.GHCR_PAT }}
      env_content_b64: ${{ secrets.PROD_ENV_B64 }}
